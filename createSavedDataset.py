# -*- coding: utf-8 -*-
"""createSavedDataset.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1qS9F0Je2tb150E_A4sf00BGCX_IXSnMW
"""

# Before running this file I have already imported 1 necessary file in Google Colab
# (appml-assignment1-dataset-v2.pkl)

# Importing all necessary packages
import pandas as pd
import numpy as np
import os
import tensorflow as tf
from tensorflow.train import Example, Features, Feature, FloatList, Int64List
from google.colab import files

# Reading the dataset pickle file
PICKLE_FILE = "appml-assignment1-dataset-v2.pkl"

data = pd.read_pickle(PICKLE_FILE)
X = data["X"]
y = data["y"]  # Target: next hour's CAD-high

# Computing fractional change between next-hour-high and current-hour-close
if "CAD-close" not in X.columns:
    raise ValueError("'CAD-close' column is missing from feature matrix X.")

frac_change = (y - X["CAD-close"]) / X["CAD-close"]

# Digitizing into 22 classes using 21 bin edges between -0.001 and 0.001
bins = np.linspace(-0.001, 0.001, 21)
labels = np.digitize(frac_change, bins)

# Displaying bin distribution to verify label spread

print("Label distribution across bins:")
print(pd.Series(labels).value_counts().sort_index())

# Extracting temporal features from the 'date' column
# weekday ∈ [0–6], hour ∈ [0–23], month ∈ [1–12]
X["weekday"] = X["date"].dt.weekday
X["hour"] = X["date"].dt.hour
X["month"] = X["date"].dt.month

print(X[["date", "weekday", "hour", "month"]].head())

# Creating and writing TFRecord file
# Each row is serialized into an Example protobuf
# Identifying ticker columns (excluding temporal columns)
ticker_columns = [col for col in X.columns if col not in ["date", "weekday", "hour", "month"]]

# Creating a Helper function to build a tf.train.Example from a row of data
def create_example(index):
    row = X.iloc[index]
    ticker_values = row[ticker_columns].values.astype(np.float32)

    feature = {
        "tickers": Feature(float_list=FloatList(value=ticker_values)),
        "weekday": Feature(int64_list=Int64List(value=[int(row["weekday"])])),
        "hour": Feature(int64_list=Int64List(value=[int(row["hour"])])),
        "month": Feature(int64_list=Int64List(value=[int(row["month"])])),
        "target": Feature(int64_list=Int64List(value=[int(labels[index])])),
    }

    return Example(features=Features(feature=feature))

# Writing all examples to a TFRecord file
tfrecord_file = "dataset.tfrecords"
with tf.io.TFRecordWriter(tfrecord_file) as writer:
    for i in range(len(X)):
        example = create_example(i)
        writer.write(example.SerializeToString())

print(f"TFRecord file '{tfrecord_file}' written with {len(X)} examples.")

# Downloading the generated TFRecord
files.download(tfrecord_file)